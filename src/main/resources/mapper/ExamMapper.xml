<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wiki.mapper.ExamMapper">
  <resultMap id="BaseResultMap" type="com.example.wiki.domain.Exam">
    <id column="EXAMID" jdbcType="BIGINT" property="examid" />
    <result column="STARTDATE" jdbcType="DATE" property="startdate" />
    <result column="ENDDATE" jdbcType="DATE" property="enddate" />
    <result column="COURSEID" jdbcType="BIGINT" property="courseid" />
    <result column="PUBLISHERID" jdbcType="BIGINT" property="publisherid" />
    <result column="TERM" jdbcType="VARCHAR" property="term" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    EXAMID, STARTDATE, ENDDATE, COURSEID, PUBLISHERID, TERM
  </sql>
  <select id="selectByExample" parameterType="com.example.wiki.domain.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where EXAMID = #{examid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from exam
    where EXAMID = #{examid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.wiki.domain.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.wiki.domain.Exam">
    insert into exam (EXAMID, STARTDATE, ENDDATE, 
      COURSEID, PUBLISHERID, TERM
      )
    values (#{examid,jdbcType=BIGINT}, #{startdate,jdbcType=DATE}, #{enddate,jdbcType=DATE}, 
      #{courseid,jdbcType=BIGINT}, #{publisherid,jdbcType=BIGINT}, #{term,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.wiki.domain.Exam">
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examid != null">
        EXAMID,
      </if>
      <if test="startdate != null">
        STARTDATE,
      </if>
      <if test="enddate != null">
        ENDDATE,
      </if>
      <if test="courseid != null">
        COURSEID,
      </if>
      <if test="publisherid != null">
        PUBLISHERID,
      </if>
      <if test="term != null">
        TERM,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examid != null">
        #{examid,jdbcType=BIGINT},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
      <if test="courseid != null">
        #{courseid,jdbcType=BIGINT},
      </if>
      <if test="publisherid != null">
        #{publisherid,jdbcType=BIGINT},
      </if>
      <if test="term != null">
        #{term,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.wiki.domain.ExamExample" resultType="java.lang.Long">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="row.examid != null">
        EXAMID = #{row.examid,jdbcType=BIGINT},
      </if>
      <if test="row.startdate != null">
        STARTDATE = #{row.startdate,jdbcType=DATE},
      </if>
      <if test="row.enddate != null">
        ENDDATE = #{row.enddate,jdbcType=DATE},
      </if>
      <if test="row.courseid != null">
        COURSEID = #{row.courseid,jdbcType=BIGINT},
      </if>
      <if test="row.publisherid != null">
        PUBLISHERID = #{row.publisherid,jdbcType=BIGINT},
      </if>
      <if test="row.term != null">
        TERM = #{row.term,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set EXAMID = #{row.examid,jdbcType=BIGINT},
      STARTDATE = #{row.startdate,jdbcType=DATE},
      ENDDATE = #{row.enddate,jdbcType=DATE},
      COURSEID = #{row.courseid,jdbcType=BIGINT},
      PUBLISHERID = #{row.publisherid,jdbcType=BIGINT},
      TERM = #{row.term,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wiki.domain.Exam">
    update exam
    <set>
      <if test="startdate != null">
        STARTDATE = #{startdate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        ENDDATE = #{enddate,jdbcType=DATE},
      </if>
      <if test="courseid != null">
        COURSEID = #{courseid,jdbcType=BIGINT},
      </if>
      <if test="publisherid != null">
        PUBLISHERID = #{publisherid,jdbcType=BIGINT},
      </if>
      <if test="term != null">
        TERM = #{term,jdbcType=VARCHAR},
      </if>
    </set>
    where EXAMID = #{examid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wiki.domain.Exam">
    update exam
    set STARTDATE = #{startdate,jdbcType=DATE},
      ENDDATE = #{enddate,jdbcType=DATE},
      COURSEID = #{courseid,jdbcType=BIGINT},
      PUBLISHERID = #{publisherid,jdbcType=BIGINT},
      TERM = #{term,jdbcType=VARCHAR}
    where EXAMID = #{examid,jdbcType=BIGINT}
  </update>
</mapper>