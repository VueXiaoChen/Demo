<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wiki.mapper.StudentsMapper">
  <resultMap id="BaseResultMap" type="com.example.wiki.domain.Students">
    <id column="STUDENTID" jdbcType="BIGINT" property="studentid" />
    <result column="STUDENTNAME" jdbcType="VARCHAR" property="studentname" />
    <result column="GRADE" jdbcType="DECIMAL" property="grade" />
    <result column="CLASSNAME" jdbcType="VARCHAR" property="classname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    STUDENTID, STUDENTNAME, GRADE, CLASSNAME
  </sql>
  <select id="selectByExample" parameterType="com.example.wiki.domain.StudentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where STUDENTID = #{studentid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from students
    where STUDENTID = #{studentid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.wiki.domain.StudentsExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.wiki.domain.Students">
    insert into students (STUDENTID, STUDENTNAME, GRADE, 
      CLASSNAME)
    values (#{studentid,jdbcType=BIGINT}, #{studentname,jdbcType=VARCHAR}, #{grade,jdbcType=DECIMAL}, 
      #{classname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.wiki.domain.Students">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        STUDENTID,
      </if>
      <if test="studentname != null">
        STUDENTNAME,
      </if>
      <if test="grade != null">
        GRADE,
      </if>
      <if test="classname != null">
        CLASSNAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        #{studentid,jdbcType=BIGINT},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=DECIMAL},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.wiki.domain.StudentsExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="row.studentid != null">
        STUDENTID = #{row.studentid,jdbcType=BIGINT},
      </if>
      <if test="row.studentname != null">
        STUDENTNAME = #{row.studentname,jdbcType=VARCHAR},
      </if>
      <if test="row.grade != null">
        GRADE = #{row.grade,jdbcType=DECIMAL},
      </if>
      <if test="row.classname != null">
        CLASSNAME = #{row.classname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set STUDENTID = #{row.studentid,jdbcType=BIGINT},
      STUDENTNAME = #{row.studentname,jdbcType=VARCHAR},
      GRADE = #{row.grade,jdbcType=DECIMAL},
      CLASSNAME = #{row.classname,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wiki.domain.Students">
    update students
    <set>
      <if test="studentname != null">
        STUDENTNAME = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        GRADE = #{grade,jdbcType=DECIMAL},
      </if>
      <if test="classname != null">
        CLASSNAME = #{classname,jdbcType=VARCHAR},
      </if>
    </set>
    where STUDENTID = #{studentid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wiki.domain.Students">
    update students
    set STUDENTNAME = #{studentname,jdbcType=VARCHAR},
      GRADE = #{grade,jdbcType=DECIMAL},
      CLASSNAME = #{classname,jdbcType=VARCHAR}
    where STUDENTID = #{studentid,jdbcType=BIGINT}
  </update>
</mapper>